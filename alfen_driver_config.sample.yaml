# Sample configuration for Alfen Driver
# Copy to alfen_driver_config.yaml and edit as needed

modbus:
  ip: 10.128.0.64 # IP address of the Alfen charger
  port: 502 # Modbus TCP port (default 502)
  socket_slave_id: 1 # Slave ID for socket-related registers
  station_slave_id: 200 # Slave ID for station-related registers

device_instance: 0 # Unique instance ID for D-Bus service (change if multiple chargers)

registers:
  voltages: 306 # Starting register for phase voltages (3 floats, 6 words)
  currents: 320 # Starting register for phase currents (3 floats, 6 words)
  power: 344 # Starting register for total power (1 float, 2 words)
  energy: 374 # Starting register for total energy (1 double, 4 words)
  status: 1201 # Starting register for status string (5 words)
  amps_config: 1210 # Register for setting configured current (1 float, 2 words)
  phases: 1215 # Register for number of active phases (1 uint16)
  firmware_version: 123 # Starting register for firmware version string
  firmware_version_count: 17 # Number of registers for firmware string
  station_serial: 157 # Starting register for station serial number string
  station_serial_count: 11 # Number of registers for serial string
  manufacturer: 117 # Starting register for manufacturer string
  manufacturer_count: 5 # Number of registers for manufacturer
  platform_type: 140 # Starting register for platform type string
  platform_type_count: 17 # Number of registers for platform type
  station_max_current: 1100 # Register for station max current (1 float, 2 words)
  station_status: 1201 # Station status register (same as status for completeness)

defaults:
  intended_set_current: 6.0 # Default charging current in amps
  station_max_current: 32.0 # Default max current if read fails

logging:
  level: INFO # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  file: /var/log/alfen_driver.log # Path to log file
  format: structured # "structured" or "simple"
  max_file_size_mb: 10 # Max log file size before rotation
  backup_count: 5 # Number of backup files to keep
  console_output: true # Whether to also log to console
  json_format: false # Use JSON format for structured logs

# Tibber integration for dynamic electricity pricing (used in SCHEDULED mode)
tibber:
  enabled: false # Set to true to enable Tibber integration
  access_token: "" # Your Tibber API access token
  home_id: "" # Optional: specific home ID if you have multiple homes
  charge_on_cheap: true # Charge when price is CHEAP
  charge_on_very_cheap: true # Charge when price is VERY_CHEAP
  # Optional advanced strategy (default: level)
  # - level: use Tibber price levels and booleans above
  # - threshold: charge when current total price <= max_price_total
  # - percentile: charge when current total price <= the p-quantile of upcoming prices
  strategy: level
  # Absolute price threshold for strategy=threshold (same unit as Tibber 'total'). Example: 0.20 for 0.20 EUR/kWh.
  max_price_total: 0.00
  # Percentile for strategy=percentile (0..1). Example: 0.3 means charge during the cheapest ~30% of upcoming hours.
  cheap_percentile: 0.3

# Pricing configuration for session cost calculation
pricing:
  source: static        # 'victron' to read from Victron system if available, or 'static'
  static_rate_eur_per_kwh: 0.25  # EUR per kWh used when source=='static' (and as fallback)
  currency_symbol: "â‚¬"  # Currency symbol to display

# Legacy time-based schedules (only used if Tibber is disabled)
schedule:
  items:
    # Default schedule: 12:00-15:00 every day (days_mask=127 sums 1+2+4+8+16+32+64 for Sun-Sat)
    - enabled: 0 # 1 to enable this schedule, 0 to disable (disabled by default since Tibber is preferred)
      days_mask: 127 # Bitmask for days (Sun=1, Mon=2, ..., Sat=64; sum for multiple)
      start: "12:00" # Start time in HH:MM (24h format)
      end: "15:00" # End time in HH:MM
    # You can add up to 2 more schedules like the above

controls:
  current_tolerance: 0.25 # Tolerance for verifying set current (in amps)
  update_difference_threshold: 0.1 # Min difference to trigger current update
  verification_delay: 0.1 # Delay (seconds) before verifying write
  retry_delay: 0.5 # Delay between retries (seconds)
  max_retries: 3 # Max retry attempts for Modbus operations
  watchdog_interval_seconds: 30 # Interval to refresh current (watchdog)
  max_set_current: 64.0 # Absolute max settable current (safety limit)
  min_charge_duration_seconds: 300 # Minimum charging duration in seconds once started in AUTO mode
  # Note: Minimum battery SOC is read from Victron settings (Settings/CGwacs/BatteryLife/MinimumSocLimit)
  current_update_interval: 30000 # Interval for refreshing current settings (ms)
  verify_delay: 100 # Verification delay in milliseconds

poll_interval_ms: 1000 # Base polling interval in milliseconds (adaptive in code)
timezone: Europe/Amsterdam # Timezone for schedule calculations
